//Shinchan Loves Coding :))
#include<bits/stdc++.h>
 
using namespace std;
 
#define night_rider ios::sync_with_stdio(false);cin.tie(NULL);
#define double long double
#define int long long int
#define en "\n"
#define fi first
#define se second
#define PB push_back
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define rep(i,x,y,k) for(int i=x ; i<y ; i+=k)
#define erep(i,x,y,k) for(int i=x ; i<=y ; i+=k)
#define erepr(i,x,y,k) for(int i=x ; i>=y ; i-=k)
#define repr(i,x,y,k) for(int i=x ; i>y ; i-=k)
#define sz(x) (int)(x.size())
 
typedef vector<int> vi;
typedef vector<vector<int>> vii;
typedef pair<int,int> pi;
typedef vector<pair<int,int>> pii;
//-------------------------------------------------------------------------------------------------------------------------------------------------------------- 
 
#ifndef ONLINE_JUDGE
#define debug(x) cerr << #x <<" "; _print(x); cerr << endl;
#else
#define debug(x)
#endif
 
void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(double t) {cerr << t;}
 
template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(vector <vector<T>> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.fi); cerr << ","; _print(p.se); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " , ";} cerr << "]";}
template <class T> void _print(vector <vector<T>> v) {cerr<<"[ ";for(auto& row : v) { cerr<<" {";for(auto& col : row) {_print(col); cerr<<" , ";} cerr<<"}\n";} cerr<<" ]";}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------- 

const int no=3e6+5,modulo=1e9+7,inf=1e18,N=2e3+9;
int ar[no];//,br[no],cr[no];//,dr[no],er[no];
//int used[no];
//int color[no];
//vi adj[no];
//pii adj[no];
//set<int> adj[no] ;
//LOWER_BOUND(n) - FIRST ELEMENT GREATER THAN EQUAL TO n
//UPPER_BOUND(n) - FIRST ELEMENT GREATER THAN n
 
//-------------------------------------------------------------------------------------------------------------------------------------------------------------- 

int calc(int n, vii &dp, vii &mx, pii &v) {
    //0 -> L
    //1 -> R
    //2 -> X

    rep(i,1,n+1,1) {
        int newx;
        // LEFT
        newx=v[i-1].fi-v[i-1].se;
        mx[i][0]=-inf;
        if(mx[i-1][0]<newx) dp[i][0]=max(dp[i][0],dp[i-1][0]+1) , mx[i][0]=v[i-1].fi;
        
        if(mx[i-1][1]<newx) dp[i][0]=max(dp[i][0],dp[i-1][1]+1) , mx[i][0]=v[i-1].fi;

        if(mx[i-1][2]<newx) dp[i][0]=max(dp[i][0],dp[i-1][2]+1) , mx[i][0]=v[i-1].fi;

        if(mx[i][0]==-inf) mx[i][0]=v[i-1].fi , dp[i][0]=0;

        //RIGHT
        newx=v[i-1].fi+v[i-1].se;
        if(v[i].fi>newx) dp[i][1]=max({dp[i][1],dp[i-1][0]+1,dp[i-1][1]+1,dp[i-1][2]+1}) , mx[i][1]=newx;
        else mx[i][1]=v[i-1].fi , dp[i][1]=0;

        //X

        dp[i][2]=max({dp[i-1][0],dp[i-1][1],dp[i-1][2]});
        mx[i][2]=v[i-1].fi;
    }
    return max({dp[n][0],dp[n][1],dp[n][2]});
}

void solve () {
    int n=0,m=0,a=0,b=0,c=0,d=0,x=0,y=0,z=0,w=0,k=0; 
    cin>>n;
    pii v;
    rep(i,0,n,1) {
        cin>>x>>y;
        v.PB({x,y});
    }
    vii dp(n+1,vi(3,0));
    vii mx(n+1,vi(3,0));
    fill(all(mx[0]),-inf);
    v.PB({inf,inf});
    cout<<calc(n,dp,mx,v);
    debug(dp)
    debug(mx)
}   

inline void runn() {
    #ifndef ONLINE_JUDGE                 
    freopen("input.txt","r",stdin);   
    freopen("output.txt","w",stdout);   
    freopen("error.txt","w",stderr);   
    #endif                               
}                                        
                                         
signed main() {                          
    night_rider
    runn(); 
    int t=1;
    cout<<fixed<<setprecision(15);
    //cin>>t;
    erep(i,1,t,1) {
       // cout << "Case #" << i << ": ";
        solve();
    }
}

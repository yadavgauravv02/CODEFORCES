//CONTEST :  Codeforces Round #357 (Div. 2)
//PROBLEM : C. Heap Operations
//PROBLEM LINK : https://codeforces.com/contest/681/problem/C

//Shinchan Loves Coding :))
#include<bits/stdc++.h>
#include<map>
#include<set>

using namespace std;

#define night_rider ios::sync_with_stdio(false);cin.tie(NULL);

#define double long double
#define int long long int
#define en "\n"
#define fi first
#define se second
#define PB push_back
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define rep(i,x,y) for(int i=x ; i<y ; i++)
#define erep(i,x,y) for(int i=x ; i<=y ; i++)
#define erepr(i,x,y) for(int i=x ; i>=y ; i--)
#define repr(i,x,y) for(int i=x ; i>y ; i--)
typedef vector<int> vi;
typedef vector<vector<int>> vii;
typedef pair<int,int> pi;
typedef vector<pair<int,int>> pii;
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

const int no=1e6+5,modulo=1e9+7,inf=1e18,N=3e3+1;
int ar[no],br[no];//,mat[N][N];
int ans=0,used[no];
vi adj[no];
//LOWER_BOUND(n) - FIRST ELEMENT GREATER THAN EQUAL TO n
//UPPER_BOUND(n) - FIRST ELEMENT GREATER THAN n

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

void solve () {
    int n=0,m=0,a=0,b=0,c=0,x=0,y=0,z=0,w=0,k=0;
    cin>>n;
    vector<pair<string,int>> v;
    priority_queue<int,vi,greater<int>> pq;
    rep(i,0,n) {
        string s;
        cin>>s;
        if(s[0]=='i') {
            cin>>x;
            pq.push(x);
            v.PB({s,x});
        }
        else if(s[0]=='g') {
            cin>>x;
            if(pq.size()==0) {
                v.PB({"insert",x});
                pq.push(x);
                v.PB({s,x});
            }
            else if(pq.top()==x) {
                v.PB({s,x});
            }
            else if(pq.top()>x) {
                v.PB({"insert",x});
                pq.push(x);
                v.PB({s,x});
            }
            else if(pq.top()<x) {
                while(pq.size()>0 && pq.top()<x) {
                    v.PB({"removeMin",-inf});
                    pq.pop();
                }
                if(pq.size()==0) {
                    v.PB({"insert",x});
                    pq.push(x);
                    v.PB({s,x});
                }
                else if(pq.top()>x) {
                    v.PB({"insert",x});
                    v.PB({s,x});
                    pq.push(x);
                }
                else if(pq.top()==x) {
                    v.PB({s,x});
                }
            }
        }
        else {
            if(pq.size()==0) {
                v.PB({"insert",1});
                v.PB({s,-inf});
            }
            else {
               pq.pop();
               v.PB({s,-inf});
            }
        }
    }
    cout<<v.size()<<en;
    for(auto i : v) if(i.se!=-inf) cout<<i.fi<<" "<<i.se<<en; else cout<<i.fi<<en;
}

inline void runn(){
	#ifndef ONLINE JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
}

signed main()
{
	night_rider
	//runn();
	int t=1;
	//cin>>t;
	while(t--){
		solve();
	}
}

//CONTEST : Codeforces Beta Round #83 (Div. 1 Only)
//PROBLEM : A. Dorm Water Supply
//PROBLEM LINK : https://codeforces.com/contest/107/problem/A

//Shinchan Loves Coding :))
#include<bits/stdc++.h>
#include<map>
#include<set>

using namespace std;

#define night_rider ios::sync_with_stdio(false);cin.tie(NULL);

#define double long double
#define int long long int
#define en "\n"
#define fi first
#define se second
#define PB push_back
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define rep(i,x,y) for(int i=x ; i<y ; i++)
#define erep(i,x,y) for(int i=x ; i<=y ; i++)
#define erepr(i,x,y) for(int i=x ; i>=y ; i--)
#define repr(i,x,y) for(int i=x ; i>y ; i--)
typedef vector<int> vi;
typedef vector<vector<int>> vii;
typedef pair<int,int> pi;
typedef vector<pair<int,int>> pii;

//--------------------------------------------------------------------------------------------------------------------------------------------------------------

const int no=1e6+5,modulo=1e9+7,inf=1e18,N=3e3+1;
//int ar[no],br[no],cr[no];//,mat[N][N];
int used[no],parent[no];
pii adj[no];
//LOWER_BOUND(n) - FIRST ELEMENT GREATER THAN EQUAL TO n
//UPPER_BOUND(n) - FIRST ELEMENT GREATER THAN n

//--------------------------------------------------------------------------------------------------------------------------------------------------------------
int mini=inf,last;
int ok=0;
void dfs(int node , int start) {
    used[node]=1;
    last=node;
    for(auto child : adj[node]) {
        if(!used[child.fi]) {
            mini=min(mini,child.se);
            dfs(child.fi,start);
        }
    }
}

void solve () {
    int n=0,m=0,a=0,b=0,x=0,y=0,z=0,w=0,k=0;
    cin>>n>>m;
    rep(i,1,n+1) parent[i]=-1;
    rep(i,0,m) {
        cin>>x>>y>>z;
        adj[x].PB({y,z});
        parent[y]=x;
    }
    vector<pair<int,pi>> v;
    rep(i,1,n+1) {
        if((parent[i]==-1 || parent[i]==i)&& !used[i]) {
            dfs(i,i);
            if(!ok && mini!=inf) v.PB({i,{last,mini}});
            ok=0;
            mini=inf;
        }
    }
    cout<<v.size()<<en;
    rep(i,0,v.size()) {
        cout<<v[i].fi<<" "<<v[i].se.fi<<" "<<v[i].se.se<<en;
    }
}

inline void runn(){
	#ifndef ONLINE JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
}

signed main()
{
	night_rider
	//runn();
	int t=1;
	//cin>>t;
	rep(i,1,t+1) {
        // cout << "Case #" << i << ": ";
        solve();
    }
}
